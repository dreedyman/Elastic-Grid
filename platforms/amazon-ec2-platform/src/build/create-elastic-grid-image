#!/usr/bin/env bash

# Copyright (C) 2007-2008 Elastic Grid, LLC.
#
# This file is part of Elastic Grid.
#
# Elastic Grid is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or any later version.
#
# Elastic Grid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Elastic Grid.  If not, see <http://www.gnu.org/licenses/>.


# Create a Elastic Grid AMI. Runs on the EC2 instance.
# Inspired by Hadoop (http://svn.apache.org/viewvc/hadoop/core/trunk/src/contrib/ec2/bin/)

# Import variables
. eg-ec2-env.sh

AMI_IMAGE=`ec2-describe-images -a | grep $S3_BUCKET | grep $EG_VERSION | grep $ARCH | grep available | awk '{print $2}'`

[ ! -z $AMI_IMAGE ] && echo "AMI already registered, use: ec2-deregister $AMI_IMAGE" && exit -1

echo "Starting a AMI with ID $BASE_AMI_IMAGE."
OUTPUT=`ec2-run-instances $BASE_AMI_IMAGE -k $KEY_NAME -t $INSTANCE_TYPE`
BOOTING_INSTANCE=`echo $OUTPUT | awk '{print $6}'`

echo "Instance is $BOOTING_INSTANCE."

echo "Polling server status (ec2-describe-instances $BOOTING_INSTANCE)"
while true; do
  printf "."
  HOSTNAME=`ec2-describe-instances $BOOTING_INSTANCE | grep running | awk '{print $4}'`
  if [ ! -z $HOSTNAME ]; then
    break;
  fi
  sleep 1
done

echo
echo "The server is available at $HOSTNAME."
while true; do
  REPLY=`ssh $SSH_OPTS "root@$HOSTNAME" 'echo "hello"'`
  if [ ! -z $REPLY ]; then
   break;
  fi
  sleep 5
done

#read -p "Login first? [yes or no]: " answer

if [ "$answer" == "yes" ]; then
  ssh $SSH_OPTS "root@$HOSTNAME"
fi

echo "Copying scripts."

# Copy setup scripts
scp $SSH_OPTS eg-ec2-env.sh "root@$HOSTNAME:/mnt"
scp $SSH_OPTS image/create-elastic-grid-image-remote "root@$HOSTNAME:/mnt"
scp $SSH_OPTS image/eg-init "root@$HOSTNAME:"
scp $SSH_OPTS image/eg-bootstrap "root@$HOSTNAME:"

ssh $SSH_OPTS "root@$HOSTNAME" 'chmod +x /mnt/eg-ec2-env.sh'
ssh $SSH_OPTS "root@$HOSTNAME" 'chmod +x /mnt/create-elastic-grid-image-remote'

# Copy private key and certificate (for bundling image)
scp $SSH_OPTS $EC2_KEYDIR/pk*.pem "root@$HOSTNAME:/mnt"
scp $SSH_OPTS $EC2_KEYDIR/cert*.pem "root@$HOSTNAME:/mnt"

# Connect to it
ssh $SSH_OPTS "root@$HOSTNAME" '/mnt/create-elastic-grid-image-remote'

# Register image
ec2-register $S3_BUCKET/elastic-grid-$EG_VERSION-$ARCH.manifest.xml

echo "Terminate with: ec2-terminate-instances $BOOTING_INSTANCE"