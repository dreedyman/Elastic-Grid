/*
 * This configuration is used by the com.sun.jini.start utility to start a
 * ProvisionMonitor, Cybernode, Webster, JMX Connector Service and
 * a Jini Lookup Service
 */
import java.net.URL;
import org.rioproject.boot.BootUtil;
import com.elasticgrid.platforms.lan.boot.ServiceDescriptorUtil;
import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
    jiniLibPath = "${JINI_HOME}${/}lib";
    jiniLibDLPath = "${JINI_HOME}${/}lib-dl";
    egLibPath = "${EG_HOME}${/}lib";
    deployDir = "${EG_HOME}${/}deploy";
    policy = "${EG_HOME}${/}policy${/}policy.all";

    reggieConfig = "${EG_HOME}${/}config${/}reggie.config";
    monitorConfig = "${EG_HOME}${/}config${/}monitor.config";
    agentConfig = "${EG_HOME}${/}config${/}agent.config";
    restConfig = "${EG_HOME}${/}config${/}rest.config";

    serviceDescriptors = new ServiceDescriptor[] {
        ServiceDescriptorUtil.getWebster(policy,
                                         "9010",
                                         new String[] {jiniLibPath,";",
                                                       jiniLibDLPath, ";",
                                                       egLibPath, ";",
                                                       deployDir}),
        /* Jini Lookup Service */
        ServiceDescriptorUtil.getLookup(policy, reggieConfig),

        /* Elastic Grid Provision Monitor */
        ServiceDescriptorUtil.getMonitor(policy, monitorConfig),

        /* Elastic Grid Agent */
        ServiceDescriptorUtil.getCybernode(policy, agentConfig)

    };    

}