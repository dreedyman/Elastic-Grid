<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
	   	<groupId>com.elasticgrid</groupId>
	    <artifactId>elastic-grid-platforms</artifactId>
	    <version>0.9.1</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>private-lan</artifactId>
    <packaging>jar</packaging>
    <name>Platforms :: Private LAN Platform</name>
    <prerequisites>
        <maven>2.0.8</maven>
    </prerequisites>

    <dependencies>
        <!-- Applications dependencies -->
		<dependency>
			<groupId>com.elasticgrid.applications</groupId>
			<artifactId>rest-api</artifactId>
			<version>${pom.version}</version>
		</dependency>

        <!-- Core Services dependencies -->
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>elastic-grid-cluster</artifactId>
            <version>${pom.version}</version>
            <classifier>impl</classifier>
        </dependency>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>elastic-grid-storage</artifactId>
            <version>${pom.version}</version>
            <classifier>impl</classifier>
        </dependency>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>private-lan-cloud-platform</artifactId>
            <version>${pom.version}</version>
            <classifier>impl</classifier>
        </dependency>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>private-lan-cloud-platform</artifactId>
            <version>${pom.version}</version>
            <classifier>dl</classifier>
        </dependency>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>amazon-ec2-cloud-platform</artifactId>
            <version>${pom.version}</version>
            <classifier>impl</classifier>
        </dependency>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>amazon-ec2-cloud-platform</artifactId>
            <version>${pom.version}</version>
            <classifier>dl</classifier>
        </dependency>

        <!-- Substrates dependencies -->
        <dependency>
			<groupId>com.elasticgrid.substrates</groupId>
			<artifactId>substrate-tomcat6</artifactId>
			<version>${pom.version}</version>
		</dependency>
        <dependency>
			<groupId>com.elasticgrid.substrates</groupId>
			<artifactId>substrate-jboss5</artifactId>
			<version>${pom.version}</version>
		</dependency>
        <!--<dependency>-->
			<!--<groupId>com.elasticgrid.substrates</groupId>-->
			<!--<artifactId>substrate-glassfish3</artifactId>-->
			<!--<version>${pom.version}</version>-->
		<!--</dependency>-->

        <!-- Framework dependencies -->
		<dependency>
			<groupId>${pom.groupId}</groupId>
			<artifactId>amazon-sqs</artifactId>
			<version>${pom.version}</version>
		</dependency>
		
		<!-- Kernel dependencies -->
        <dependency>
			<groupId>${pom.groupId}</groupId>
			<artifactId>amazon-ec2-provisioner</artifactId>
			<version>${pom.version}</version>
		</dependency>
        <dependency>
			<groupId>${pom.groupId}</groupId>
			<artifactId>private-lan-provisioner</artifactId>
			<version>${pom.version}</version>
		</dependency>
		<dependency>
			<groupId>${pom.groupId}</groupId>
			<artifactId>elastic-grid-core</artifactId>
			<version>${pom.version}</version>
		</dependency>
		<dependency>
			<groupId>${pom.groupId}</groupId>
			<artifactId>elastic-grid-utils</artifactId>
			<version>${pom.version}</version>
		</dependency>
        <dependency>
			<groupId>${pom.groupId}</groupId>
			<artifactId>elastic-grid-cli</artifactId>
			<version>${pom.version}</version>
		</dependency>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>elastic-grid-deploy-handlers</artifactId>
            <version>${pom.version}</version>
        </dependency>

        <!-- Rio dependencies -->
        <dependency>
            <groupId>org.rioproject</groupId>
            <artifactId>rio</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.rioproject</groupId>
            <artifactId>boot</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.rioproject</groupId>
            <artifactId>monitor</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Jini 2.1 dependencies -->
        <dependency>
            <groupId>net.jini</groupId>
            <artifactId>jsk-lib</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>net.jini</groupId>
            <artifactId>jsk-platform</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jini</groupId>
            <artifactId>tools</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Typica dependencies -->
        <dependency>
            <groupId>com.google.code.typica</groupId>
            <artifactId>typica</artifactId>
            <version>1.5</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.1.6</version>
        </dependency>

        <!-- Amazon S3 integration -->
        <dependency>
            <groupId>net.java.dev.jets3t</groupId>
            <artifactId>jets3t</artifactId>
        </dependency>

        <dependency>
            <groupId>stax</groupId>
            <artifactId>stax-api</artifactId>
            <version>1.0.1</version>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.jibx</groupId>-->
            <!--<artifactId>jibx-run</artifactId>-->
            <!--<version></version>-->
        <!--</dependency>-->

        <!-- IzPack dependencies -->
        <dependency>
            <groupId>org.codehaus.izpack</groupId>
            <artifactId>izpack-standalone-compiler</artifactId>
            <version>${izpack-release}</version>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.8</version>
            <classifier>jdk15</classifier>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                    <finalName>elastic-grid-${pom.version}</finalName>
                    <appendAssemblyId>true</appendAssemblyId>
                    <ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>
                </configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- append to the packaging phase. -->
						<goals>
							<goal>attached</goal> <!-- goals == mojos -->
						</goals>
					</execution>
				</executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-property</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireProperty>
                                    <property>rio.home</property>
                                    <message>
                                        You must set a property 'rio.home' to a working Rio installation! This can be done by doing mvn -Drio.home=...
                                    </message>
                                </requireProperty>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <optimize>true</optimize>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <excludedGroups>qa</excludedGroups>
                </configuration>
            </plugin>
            <!--  copy other checked resource into staging area, expected by install.xml -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <id>create-staging-area</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- IzPack configuration files -->
                                <copy todir="${staging.dir}">
                                    <fileset dir="${basedir}/src/izpack"/>
                                    <filterset>
                                        <filter token="VERSION" value="${pom.version}"/>
                                    </filterset>
                                </copy>
                                <!-- Download and unzip Amazon EC2 API Tools -->
                                <get dest="${staging.dir}/ec2-api-tools.zip" verbose="yes" usetimestamp="yes"
                                     src="http://www.amazon.com/gp/redirect.html/ref=aws_rc_ec2tools?location=http://s3.amazonaws.com/ec2-downloads/ec2-api-tools.zip&amp;token=A80325AA4DAB186C80828ED5138633E3F49160D9"/>
                                <unzip src="${staging.dir}/ec2-api-tools.zip" dest="${staging.dir}"/>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-izpack-panels</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <copy file="${project.build.directory}/private-lan-platform-0.9.1.jar"
                                      tofile="${staging.dir}/bin/panels/com.elasticgrid.tools.installer.AWSCredentialsPanel.jar"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.izpack</groupId>
                <artifactId>izpack-maven-plugin</artifactId>
                <configuration>
                    <izpackBasedir>${staging.dir}</izpackBasedir>
                    <customPanelDirectory>${staging.dir}</customPanelDirectory>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>izpack</goal>
                        </goals>
                        <configuration>
                            <installerFile>${project.build.directory}/elastic-grid-${pom.version}-installer.jar</installerFile>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.izpack</groupId>
                        <artifactId>izpack-standalone-compiler</artifactId>
                        <version>${izpack-release}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>codehaus-snapshots</id>
            <url>http://snapshots.repository.codehaus.org</url>
        </repository>
    </repositories>

    <!--<pluginRepositories>-->
        <!--<pluginRepository>-->
            <!--<id>codehaus-snapshots</id>-->
            <!--<url>http://snapshots.repository.codehaus.org</url>-->
        <!--</pluginRepository>-->
    <!--</pluginRepositories>-->

    <properties>
        <staging.dir>${project.build.directory}/staging</staging.dir>
        <izpack-release>4.3.0-SNAPSHOT</izpack-release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


</project>
